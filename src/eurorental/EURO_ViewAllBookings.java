/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package eurorental;

import java.awt.print.PrinterException;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Eugene Winata - TP066869
 */
public class EURO_ViewAllBookings extends javax.swing.JFrame {

    /**
     * Creates new form EURO_ViewAllBookings
     */
    public EURO_ViewAllBookings() {
        initComponents();
        view();
    }
    
    final String OLD_FORMAT = "dd/MM/yyyy";

    public void view(){
        DefaultTableModel table = (DefaultTableModel)bookTable.getModel();
        for(int i = 0; i<Data.bookingData.size();i++){
            String custName = Data.bookingData.get(i).getCustomer().getName();
            String car = Data.bookingData.get(i).getCar().getCar_plate();
            String day = Data.bookingData.get(i).getDay();
            String month = Data.bookingData.get(i).getMonth();
            String year = Data.bookingData.get(i).getYear();
            String bookDate = day + "/" + month + "/" + year;
            String dayEnd = Data.bookingData.get(i).getDayEnd();
            String monthEnd = Data.bookingData.get(i).getMonthEnd();
            String yearEnd = Data.bookingData.get(i).getYearEnd();
            String endBookDate = dayEnd + "/" + monthEnd + "/" + yearEnd;
            int price = Data.bookingData.get(i).getPrice();
            String status = Data.bookingData.get(i).getStatus();
            String cardType = Data.bookingData.get(i).getCardType();
            String cardNum = Data.bookingData.get(i).getCardNum();
            
            Object[] data = {custName,car,bookDate,endBookDate,price,status,cardType,cardNum};
            
            table.addRow(data);
        }
    }
    
    private int findBooking(Customer cust , Car plate, String day, String month, String year, String dayEnd,String monthEnd,String yearEnd,int price,String status){
        for(int i = 0;i<Data.bookingData.size();i++){
            Booking b = Data.bookingData.get(i);
            if(b.getCustomer().getName().equals(cust.getName()) && b.getCar().getCar_plate().equals(plate.getCar_plate()) && b.getDay().equals(day) && b.getMonth().equals(month)&&b.getYear().equals(year)&& b.getPrice() == price && b.getDayEnd().equals(dayEnd) && b.getMonthEnd().equals(monthEnd) && b.getYearEnd().equals(yearEnd)){
                return i;
            }
        }
        return -1;
    }
    
    private int findCar(String car_plate){
        for(int i = 0;i<Data.carData.size();i++){
            Car c = Data.carData.get(i);
            if(c.getCar_plate().equals(car_plate)){
                return i;
            }
        }
        return -1;
    }
    
    private Car queryCar(String car_plate){
        int position = findCar(car_plate);
        if(position>=0){
            return Data.carData.get(position);
        }
        return null;
    }
    
    private Booking queryBook(Customer cust , Car plate, String day, String month,String year,String dayEnd,String monthEnd,String yearEnd,int price, String status){
        int position = findBooking(cust,plate,day,month,year,dayEnd,monthEnd,yearEnd,price,status);
        if(position>=0){
            return Data.bookingData.get(position);
        }
        return null;
    }
    
    private int findCar(Car car){
        return Data.carData.indexOf(car);
    }
    
    private int findBook(Booking book){
        return Data.bookingData.indexOf(book);
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        returnButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        editBook = new javax.swing.JButton();
        printReport = new javax.swing.JButton();
        statusBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eurorental/EURO RENTAL.png"))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Century Gothic", 3, 24)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("View All Bookings");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addContainerGap())
        );

        returnButton.setBackground(new java.awt.Color(204, 204, 204));
        returnButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        returnButton.setText("Return");
        returnButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        returnButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnButtonMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Bookings");

        bookTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Car Plate", "Start Date", "End Date", "Total Price", "Status", "Card Type", "Card Num"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(bookTable);

        editBook.setBackground(new java.awt.Color(204, 204, 204));
        editBook.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        editBook.setText("Modify Booking");
        editBook.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        editBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editBookMouseClicked(evt);
            }
        });

        printReport.setBackground(new java.awt.Color(204, 204, 204));
        printReport.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        printReport.setText("Print Report");
        printReport.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        printReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printReportMouseClicked(evt);
            }
        });
        printReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printReportActionPerformed(evt);
            }
        });

        statusBox.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        statusBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Confirm", "Canceled" }));
        statusBox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(statusBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(94, 94, 94)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(editBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(printReport, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))))
                .addGap(28, 28, 28))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editBook)
                    .addComponent(statusBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnButton)
                    .addComponent(printReport))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookTableMouseClicked
        // TODO add your handling code here:
        try{
            if(bookTable.getSelectedRow()==-1)return;
            int number = bookTable.getSelectedRow();
            String status = bookTable.getValueAt(number, 4).toString();
            statusBox.setSelectedItem(status);
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_bookTableMouseClicked

    private void returnButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnButtonMouseClicked
        // TODO add your handling code here:
        EURO_AdmMenu admMenu = new EURO_AdmMenu();
        admMenu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_returnButtonMouseClicked

    private void editBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBookMouseClicked
        // TODO add your handling code here:
        try{
            if(bookTable.getSelectedRow() == -1)return;
            
            System.out.println("dadw");
            int number = bookTable.getSelectedRow();
            System.out.println(number);
            Customer cust = null;
            Car plate = null;
            for(int i = 0; i<Data.customerData.size();i++){
                if(Data.customerData.get(i).getName().equals(bookTable.getValueAt(number, 0).toString())){
                    cust = Data.customerData.get(i);
                    break;
                }
            }
            for(int i = 0; i<Data.carData.size();i++){
                if(Data.carData.get(i).getCar_plate().equals(bookTable.getValueAt(number, 1).toString())){
                    plate = Data.carData.get(i);
                    break;
                }
            }
            String date = bookTable.getValueAt(number, 2).toString();
            String[] dateDest = date.split("/");
            String day = dateDest[0];
            String month = dateDest[1];
            String year = dateDest[2];
            String dateEnd = bookTable.getValueAt(number, 3).toString();
            String[] dateEndDest = dateEnd.split("/");
            String dayEnd = dateEndDest[0];
            String monthEnd = dateEndDest[1];
            String yearEnd = dateEndDest[2];
            int price = Integer.parseInt(bookTable.getValueAt(number, 4).toString());
            String status = statusBox.getSelectedItem().toString();
            int choice;
            if(status.equals("Confirm")){
                choice = 1;
            }else{
                choice = 0;
            }
            String cardType ="";
            String cardNum="";
            for(int i =0;i<Data.bookingData.size();i++){
                if(Data.bookingData.get(i).getCar().getCar_plate().equals(plate.getCar_plate())){
                     cardType = Data.bookingData.get(i).getCardType();
                     cardNum = Data.bookingData.get(i).getCardNum();
                }
            }
            Booking modifBook = new Booking(cust,plate,day,month,year,dayEnd,monthEnd,yearEnd,price,status,cardType, cardNum);
            //modify booking
            Booking book = queryBook(cust,plate,day,month,year,dayEnd,monthEnd,yearEnd,price,bookTable.getValueAt(number, 5).toString());
            int foundBook = findBook(book);
            System.out.println(foundBook + " Booking");
            Data.bookingData.set(foundBook, modifBook);
            System.out.println("sucess");
            //modify car status
            if(choice == 1){
                Car modifStatus = new Car(plate.getCar_brand(),plate.getCar_plate(),plate.getCar_model(),plate.getPrice(),"Booked");
                System.out.println("lollollolaoldold");
                Car car = queryCar(plate.getCar_plate());
                int foundCar = findCar(car);
                System.out.println(foundCar);
                Data.carData.set(foundCar,modifStatus);
            }else{
                Car modifStatus = new Car(plate.getCar_brand(),plate.getCar_plate(),plate.getCar_model(),plate.getPrice(),"Available");
                Car car = queryCar(plate.getCar_plate());
                int foundCar = findCar(car);
                Data.carData.set(foundCar,modifStatus);
            }
            Data.write();
            JOptionPane.showMessageDialog(null,"Succesfully Edited");
            DefaultTableModel table = (DefaultTableModel)bookTable.getModel();
            table.setNumRows(0);
            view();
            
            
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_editBookMouseClicked

    private void printReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printReportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_printReportActionPerformed

    private void printReportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printReportMouseClicked
        MessageFormat header = new MessageFormat("All Transaction Report");
        try {
            // TODO add your handling code here:
            bookTable.print();
        } catch (PrinterException ex) {
            Logger.getLogger(EURO_ViewAllBookings.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printReportMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EURO_ViewAllBookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EURO_ViewAllBookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EURO_ViewAllBookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EURO_ViewAllBookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Data.read();
                new EURO_ViewAllBookings().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bookTable;
    private javax.swing.JButton editBook;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton printReport;
    private javax.swing.JButton returnButton;
    private javax.swing.JComboBox<String> statusBox;
    // End of variables declaration//GEN-END:variables
}
