/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package eurorental;

import java.awt.Graphics2D;
import java.awt.Shape;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import com.lowagie.text.Document;
import com.lowagie.text.PageSize;
import com.lowagie.text.pdf.PdfContentByte;
import com.lowagie.text.pdf.PdfWriter;


/**
 *
 * @author Eugene Winata - TP066869
 */
public class EURO_BookCar extends javax.swing.JFrame {

    /**
     * Creates new form EURO_BookCar
     */
    public EURO_BookCar() {
        initComponents();
        view();
    }
    
    final String OLD_FORMAT = "dd/MM/yyyy";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        bookCar = new javax.swing.JButton();
        returnButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        carList = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cardNumField = new javax.swing.JTextField();
        cardBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        startDate = new com.toedter.calendar.JDateChooser();
        endDate = new com.toedter.calendar.JDateChooser();
        priceField = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eurorental/EURO RENTAL.png"))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Century Gothic", 3, 24)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Book Car");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addContainerGap())
        );

        bookCar.setBackground(new java.awt.Color(204, 204, 204));
        bookCar.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        bookCar.setText("Book Car");
        bookCar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        bookCar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookCarMouseClicked(evt);
            }
        });

        returnButton.setBackground(new java.awt.Color(204, 204, 204));
        returnButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        returnButton.setText("Return");
        returnButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        returnButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnButtonMouseClicked(evt);
            }
        });

        carList.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        carList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Brand", "Car Plate", "Car Model", "Rent Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        carList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(carList);

        jLabel3.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Cars List");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel5.setText("Payment");

        cardNumField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        cardNumField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        cardBox.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        cardBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MASTERCARD", "VISA" }));
        cardBox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel6.setText("Book Date");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel8.setText("Total Price");

        startDate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        endDate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        priceField.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        priceField.setText("price");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(107, 107, 107))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(155, 155, 155)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bookCar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceField)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(67, 67, 67))
                                .addComponent(cardBox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cardNumField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(priceField)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cardBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cardNumField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(bookCar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(returnButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bookCarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookCarMouseClicked
        // TODO add your handling code here:
        try{
            int number = carList.getSelectedRow();
            SimpleDateFormat sdf = new SimpleDateFormat(OLD_FORMAT);
            Date dateConvert = new Date();
            String dateConvertString = sdf.format(dateConvert);
            Date newdate = sdf.parse(dateConvertString);
            String model = carList.getValueAt(number, 2).toString();
            Date start = startDate.getDate();
            Date end = endDate.getDate();
            String startDay = sdf.format(start);
            String[] startDayDe = startDay.split("/");
            String endDay = sdf.format(end);
            String[] endDayDe = endDay.split("/");
            String dayStart = startDayDe[0];
            String monthStart = startDayDe[1];
            String yearStart = startDayDe[2];
            String dayEnd = endDayDe[0];
            String monthEnd = endDayDe[1];
            String yearEnd = endDayDe[2];
            String plate ="";
            Car car = null;
            for(int i = 0;i<Data.carData.size();i++){
                if(model.equals(Data.carData.get(i).getCar_model())){
                    plate = Data.carData.get(i).getCar_plate();
                    car = Data.carData.get(i);
                }
            }
            //date
            Customer custName = null;
            if(Data.bookingData.isEmpty()){
                for(int k = 0; k<Data.customerData.size();k++){
                    if(Data.customerData.get(k).getName().equals(Data.currentLogin.get(0))){
                        custName = Data.customerData.get(k);
                        break;
                    }
                }
                long difference = sdf.parse(endDay).getTime()- sdf.parse(startDay).getTime();
                long differentDay = (difference/ (1000 * 60 * 60 * 24)) %365;
                int priceTotal = (int)differentDay * Integer.parseInt(priceField.getText());
                
                Booking newBook = new Booking(custName,car,dayStart,monthStart,yearStart,dayEnd,monthEnd,yearEnd,priceTotal,"Confirm",cardBox.getSelectedItem().toString(),cardNumField.getText());
                Data.bookingData.add(newBook);
                Data.write();
                return;
            }
            for(int i = 0; i<Data.bookingData.size();i++){
                String dateStart = Data.bookingData.get(i).getDay() + "/" + Data.bookingData.get(i).getMonth() + "/" + Data.bookingData.get(i).getYear();
                Date dateSt = sdf.parse(dateStart);
                String dateEnd = Data.bookingData.get(i).getDayEnd() + "/" + Data.bookingData.get(i).getMonthEnd() + "/" + Data.bookingData.get(i).getYearEnd();
                Date dateEn = sdf.parse(dateEnd);
                for(int j = 0;j<Data.carData.size();j++){
                if(sdf.format(start).compareTo(sdf.format(newdate))<0 || sdf.format(end).compareTo(sdf.format(newdate))<0 || sdf.format(start).compareTo(sdf.format(dateSt))>=0 && sdf.format(end).compareTo(sdf.format(dateEn))<=0 && Data.bookingData.get(i).getCar().getCar_plate().equals(plate) && Data.bookingData.get(i).getStatus().equals("Confirm") || sdf.format(start).compareTo(sdf.format(dateSt))<0 && sdf.format(end).compareTo(sdf.format(dateEn))>=0 && Data.bookingData.get(i).getCar().getCar_plate().equals(plate) && Data.bookingData.get(i).getStatus().equals("Confirm") || sdf.format(start).compareTo(sdf.format(dateSt))==0 && sdf.format(end).compareTo(sdf.format(dateEn))==0 && Data.bookingData.get(i).getCar().getCar_plate().equals(plate) && Data.bookingData.get(i).getStatus().equals("Confirm") || sdf.format(start).compareTo(sdf.format(dateSt))==0 && Data.bookingData.get(i).getCar().getCar_plate().equals(plate) && Data.bookingData.get(i).getStatus().equals("Confirm")){
                    System.out.println("trap");
                    JOptionPane.showMessageDialog(null,"Add Failed, Someone booked already");
                    return;
                }
                for(int k = 0; k<Data.customerData.size();k++){
                    if(Data.customerData.get(k).getName().equals(Data.currentLogin.get(0))){
                        custName = Data.customerData.get(k);
                    }
                }
                
               }
            }
            long difference = sdf.parse(endDay).getTime()-sdf.parse(startDay).getTime();
            long differentDay = (difference / (1000 * 60 * 60 * 24)) % 365;
            int priceTotal = (int)differentDay * Integer.parseInt(priceField.getText());
            
            Booking newBook = new Booking(custName,car,dayStart,monthStart,yearStart,dayEnd,monthEnd,yearEnd,Integer.parseInt(priceField.getText()),"Confirm",cardBox.getSelectedItem().toString(),cardNumField.getText());
            Data.bookingData.add(newBook);
            Data.write();
            JOptionPane.showMessageDialog(null,"Book Success");
        }catch(Exception e){
           e.printStackTrace();
        }
    }//GEN-LAST:event_bookCarMouseClicked

    private void carListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carListMouseClicked
        // TODO add your handling code here:
        try{
        int number = carList.getSelectedRow();
        SimpleDateFormat sdf = new SimpleDateFormat(OLD_FORMAT);
        Date start = startDate.getDate();
        Date end = endDate.getDate();
        String startDay = sdf.format(start);
        String endDay = sdf.format(end);
        long difference = sdf.parse(endDay).getTime()-sdf.parse(startDay).getTime();
        long differentDay = (difference / (1000 * 60 * 60 *24)) % 365;
        int total = Integer.parseInt(carList.getValueAt(number, 3).toString()) * (int)differentDay;
        
        priceField.setText(Integer.toString(total));
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_carListMouseClicked

    private void returnButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnButtonMouseClicked
        // TODO add your handling code here:
        EURO_CustMenu custMenu = new EURO_CustMenu();
        custMenu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_returnButtonMouseClicked

    public void view(){
        DefaultTableModel modelTable = (DefaultTableModel)carList.getModel(); 
        for(int i = 0; i<Data.carData.size();i++){
            String brand = Data.carData.get(i).getCar_brand();
            String plate = Data.carData.get(i).getCar_plate();
            String model = Data.carData.get(i).getCar_model();
            int price = Data.carData.get(i).getPrice();
            String status = Data.carData.get(i).getStatus();
            
            Object[] data = {brand,plate,model,price,status};
            
            modelTable.addRow(data);
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EURO_BookCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EURO_BookCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EURO_BookCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EURO_BookCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Data.read();
                new EURO_BookCar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bookCar;
    private javax.swing.JTable carList;
    private javax.swing.JComboBox<String> cardBox;
    private javax.swing.JTextField cardNumField;
    private com.toedter.calendar.JDateChooser endDate;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel priceField;
    private javax.swing.JButton returnButton;
    private com.toedter.calendar.JDateChooser startDate;
    // End of variables declaration//GEN-END:variables
}
